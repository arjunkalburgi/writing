{"hash":"2ef915a8edff2c369f6c6610395c14cf983cab00","data":{"post":{"id":"1f50b106ca8642c90b34aa8c6a8f4d91","title":"Creating a Custom Loading Spinner for Android ðŸ¤–","content":"<blockquote>\n<p>Recently at Krugo, I was implementing a custom loading animation. I donâ€™t usually write about work things, but this one was different.</p>\n</blockquote>\n<h4 id=\"first-the-setup\"><a href=\"#first-the-setup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>First, theÂ Setup</h4>\n<p>First I implemented this BehaviorSubject in my Dependency Injection:</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var progressBar: BehaviorSubject&lt;Boolean&gt; = BehaviorSubject.createDefault(false)  \nfun setProgressBar(value: Boolean) {  \n    progressBar.onNext(value)  \n}</code></pre></div>\n<p>And subscribed to it from the MainActivity:</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Injector.progressBar._subscribeBy_(  \n        onNext = {  \n            if (it) {  \n                this.mainProgress._visibility_ \\= View._VISIBLE_ } else {  \n                this.mainProgress._visibility_ \\= View._GONE_ }  \n        },onError = {})  \n        ._addTo_(compositeDisposable)</code></pre></div>\n<p>These together allow me to toggle the ProgressBar view (that was set up in activity_main) simply by calling <code class=\"language-text\">Injector.setProgressBar(true)</code> and <code class=\"language-text\">Injector.setProgressBar(false)</code>.</p>\n<h4 id=\"second-the-animation\"><a href=\"#second-the-animation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Second, the Animation</h4>\n<p>Hereâ€™s the fun part. I used <a href=\"https://shapeshifter.design/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Shape Shifter</a> to make the animation, this is what I made:</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*TOT7NQcg-4VcfbAynbk7vA.gif\"></p>\n<p>Shape Shifter allows you to export the animation as an <code class=\"language-text\">animated-vector</code>Â , made just for Android.</p>\n<p>I found that breaking that <code class=\"language-text\">animated-vector</code> into four separate files worked best. The first is the main file, make sure your ProgressBar uses this.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;animated-vector   \n    android:drawable=&quot;@drawable/your\\_vector\\_file&quot;&gt;  \n  \n    &lt;target  \n        android:name=&quot;group1&quot;  \n        android:animation=&quot;@anim/your\\_first\\_animation\\_file&quot; /&gt;  \n  \n    &lt;target  \n        android:name=&quot;group2&quot;  \n        android:animation=&quot;@anim/your\\_second\\_animation\\_file&quot; /&gt;  \n&lt;/animated-vector\\&gt;</code></pre></div>\n<p>The vector file, taken from the <code class=\"language-text\">&lt;vector&gt;</code> section of the <code class=\"language-text\">animated-vector</code>Â :</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;vector android:name=&quot;vector&quot;  \n    android:viewportWidth=&quot;1024&quot;  \n    android:viewportHeight=&quot;1024&quot;&gt;  \n    &lt;group ... /&gt;  \n    &lt;group ... /&gt;  \n&lt;/vector\\&gt;</code></pre></div>\n<p>And the two animation files taken from the <code class=\"language-text\">&lt;target&gt;</code> sections and placed under <code class=\"language-text\">res/anim/</code>Â . Theyâ€™ll look like this:</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;set\\&gt;  \n    &lt;objectAnimator ... /&gt;  \n    &lt;objectAnimator ... /&gt;  \n    &lt;objectAnimator ... /&gt;  \n    &lt;objectAnimator ... /&gt;  \n&lt;/set\\&gt;</code></pre></div>\n<h4 id=\"third-making-it-work\"><a href=\"#third-making-it-work\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Third, Making itÂ Work</h4>\n<p>This was all great, but it didnâ€™t exactly work. The animation wouldnâ€™t repeat itself after it completed. Took a while but finally got it working by doing the following:</p>\n<p>Change <code class=\"language-text\">ProgressBar</code> to <code class=\"language-text\">ImageView</code></p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;ImageView  \n    android:contentDescription=&quot;@string/loading&quot;  \n    android:id=&quot;@+id/progress\\_bar&quot;  \n    android:layout\\_width=&quot;200dp&quot;  \n    android:layout\\_height=&quot;200dp&quot;  \n    android:layout\\_gravity=&quot;center&quot; /&gt;</code></pre></div>\n<p>Initialize the animation including <code class=\"language-text\">registerAnimationCallback</code> to force the looping of the animation.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">val avd = AnimatedVectorDrawableCompat.create(_applicationContext_,            \n                                      R.drawable._your\\_vector\\_file_)  \nfindViewById&lt;ImageView&gt;(R.id._progress\\_bar_)._apply_ { setImageDrawable(avd)  \n}  \navd?.registerAnimationCallback(obj:Animatable2Compat.AnimationCallback() {  \n    override fun onAnimationEnd(drawable: Drawable?) {  \n        avd.start()  \n    }  \n})</code></pre></div>\n<p>To top it off, I added <code class=\"language-text\">start()</code> and <code class=\"language-text\">stop()</code> to my <code class=\"language-text\">_subscribeBy_</code> method just to be nice:</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Injector.progressBar._subscribeBy_(  \n        onNext = {  \n            if (it) {  \n                this.mainProgress._visibility_ \\= View._VISIBLE_ avd?_.start()_ } else {  \n                this.mainProgress._visibility_ \\= View._GONE_ avd?_.stop()_ }  \n        },onError = {})  \n        ._addTo_(compositeDisposable)</code></pre></div>\n<p>This last step took me a while to figure out but I finally got it thanks to <a href=\"https://medium.com/androiddevelopers/re-animation-7869722af206\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this article</a> from the Android Developers blog.</p>\n<p>Overall I loved the chance to work on some animation, I think itâ€™s just going to become a bigger thing in 2019 and more of a priority for me to learn!</p>\n<h4 id=\"krugo-travel\"><a href=\"#krugo-travel\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Krugo Travel</h4>\n<p>Quick shoutout to the company Iâ€™m working for, Krugo. Iâ€™m working on getting the Android app up and running hence why I was doing this little animation in Android!</p>\n<blockquote>\n<p>Have you ever been frustrated trying to plan a trip with a group of people? Maybe a bachelor party, family vacation or trip with the girls? If so, youâ€™re not alone.</p>\n<p>And weâ€™ve made it our mission to help.</p>\n</blockquote>\n<p>Krugo helps groups of friends collaboratively plan trips by finding events, buying tickets and getting a place to stay. Canâ€™t wait to take my own Krugo soon ðŸ˜œ</p>\n<p>Check â€™em out on <a href=\"https://medium.com/@krugo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Medium</a> or get the <a href=\"https://krugotravel.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">app for iOS</a>. Android coming soon!</p>\n","date":"January 15, 2019","timeToRead":3,"description":"Recently at Krugo, I was asking to implement a custom loading animation. I donâ€™t usually write about work things, but this one wasâ€¦","cover":"https://cdn-images-1.medium.com/max/800/1*TOT7NQcg-4VcfbAynbk7vA.gif"}},"context":{}}