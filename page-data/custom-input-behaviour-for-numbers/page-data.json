{"componentChunkName":"component---src-templates-blog-post-js","path":"/custom-input-behaviour-for-numbers/","webpackCompilationHash":"f0d5c1c705911dc48323","result":{"data":{"site":{"siteMetadata":{"title":"Writing","author":"Arjun Kalburgi"}},"markdownRemark":{"id":"f152773c-b693-583a-b4f1-bd1bc21783e7","excerpt":"After accomplishing this twice now on two different occasions, I want to note it down for future reference. I think this is pretty core functionality for numberâ€¦","html":"<blockquote>\n<p>After accomplishing this twice now on two different occasions, I want to note it down for future reference. I think this is pretty core functionality for number inputs.</p>\n</blockquote>\n<p>When you type into a currency field, the field should adapt and reflect your text input. The experience is much cleaner if you're only ever typing numbers. </p>\n<p>Thus this: </p>\n<pre><code class=\"language-javascript\">// First, remove any '$' or decimals.\nlet val = input.toString().replace('$', '').replace('.', '');\nlet vallen = val.length\n\n// Ensure it is a number\nif (parseFloat(val)) {\n  \n   // Add a 0 for edge case to ensure: \"$0.04\"\n   if (vallen &#x3C; 2) { val = '0' + val; }\n  \n   // Add the decimal to the correct place\n   let output = val.substr(0, vallen - 2) + '.' + val.substr(vallen - 2, vallen);\n\n   // Clean up float and add back '$'\n   output = '$' + parseFloat(output).toFixed(2).toString();\n}\n</code></pre>\n<p>Now that I'm writing this, it seems like the line for the fourth comment is redundant. Why am I adding a decimal and then cleaning up the float value? Shouldn't <code>parseFloat(output).toFixed(2)</code> do all the right work? </p>\n<p>But that step is required to ensure the differences between <code>'0.04'</code> and <code>0.40</code> and <code>4.00</code> are all taken care of. :smile: </p>\n<p>It's actually the final line where the redundancy comes. I use <code>parseFloat</code> for the case of <code>00.040</code> where there maybe extra zeros present. And  <code>toFixed(2)</code> is for the case when <code>6.00</code> simplifies to <code>6</code>. </p>\n<p>And it all works: </p>\n<img src=\"./numberinput.gif\" alt=\"Number input gif showing how it works\" style=\"zoom:50%;\" />\n<p>If there's a more efficient way to do this please let me know :D </p>\n<p><img src=\"https://arjunkalburgi.github.io/assets/Graphics/Backgrounds/leaves-white.jpg\" alt=\"leaves\"></p>","frontmatter":{"title":"Custom Input Behaviour for Numbers","date":"September 25, 2019","description":"After accomplishing this twice now on two different occasions, I want to note it down for future reference. I think this is pretty core functionality for number inputs."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/custom-input-behaviour-for-numbers/","previous":{"fields":{"slug":"/moving-my-blog-to-gatsby/"},"frontmatter":{"title":"Moving my blog to Gatsby"}},"next":{"fields":{"slug":"/creating-a-slide-to-confirm-component/"},"frontmatter":{"title":"Creating a \"Swipe-to-Confirm\" Component"}}}}}