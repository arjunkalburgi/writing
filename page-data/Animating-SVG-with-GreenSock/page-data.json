{"componentChunkName":"component---src-templates-blog-post-js","path":"/animating-svg-with-greensock/","webpackCompilationHash":"8fc8513cfd4ef89b9205","result":{"data":{"site":{"siteMetadata":{"title":"Writing","author":"Arjun Kalburgi"}},"markdownRemark":{"id":"4181c510-91e5-5875-97d4-c9167f46ecce","excerpt":"The next chapter in my quest to learn more about animating SVG on the web. Previously, I used SVG‚Äôs  tag to animate a new Slackify logo I was working on. Here I‚Ä¶","html":"<blockquote>\n<p>The next chapter in my quest to learn more about animating SVG on the web.</p>\n</blockquote>\n<p>Previously, I used SVG‚Äôs <code class=\"language-text\">animate</code> tag to animate a new Slackify logo I was working on. Here I did the same thing but with the <a href=\"https://greensock.com/\">GreenSock Animation Platform (GSAP, GreenSock)</a>.</p>\n<p>Although I could have done the animation entirely in CSS, the purpose of this experiment was to see how I could animate using the multiple SVG‚Äôs I had created previously.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*AtJwk7_cpzGFJI6nZkMsjg.png\"></p>\n<p>This is the same screenshot of my Figma design asset from before. There are 4 paths here that I want to animate to each other with an easing between them.</p>\n<p>With SVG‚Äôs <code class=\"language-text\">animate</code> the preferred effect was not achieved, though mostly the basic motion was.</p>\n<p>At first I had a lot of trouble trying to adapt my SVG‚Äôs because GSAP isn‚Äôt perfectly meant to be used to manipulate the <code class=\"language-text\">d</code> path of SVG elements. However, I eventually figured out how to do it after a bunch of Google searches.</p>\n<p>tl.to(dotA,<br>\n0.8, {<br>\nattr: {<br>\nd: ‚ÄúM59.0596 ‚Ä¶ 959Z‚Äù<br>\n},<br>\nease: Power1.easeInOut,<br>\n})</p>\n<p>The trick just happened to be to wrap the <code class=\"language-text\">d</code> modification in the <code class=\"language-text\">attr</code> block. This successfully applied the <code class=\"language-text\">dotA</code> path element in the SVG with the new <code class=\"language-text\">d</code> path.</p>\n<p>I went on to apply this same animation to the other 4 path elements.</p>\n<p>The final result:</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*GOG3jx9dVNpwbrq4TjvZAA.gif\"></p>\n<p>I have a theory as to why there is that strange sharpness of the dots during the animation, but that‚Äôs for another blog!</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*cuvajqmhcC8_croNpCLZFg.png\"></p>\n<p>Thank you! Please let me know if you have any suggestions!</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*hw6Xjc3RJxvdLnrbYrERPg.jpeg\"></p>","frontmatter":{"title":"Animating SVG with GreenSock üß¶","date":"November 20, 2018","description":"The next chapter in my quest to learn more about animating SVG on the web."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/animating-svg-with-greensock/","previous":{"fields":{"slug":"/do-animated-svgs----react-native/"},"frontmatter":{"title":"Do Animated SVGs üíî React-Native?"}},"next":{"fields":{"slug":"/online-styleguide/"},"frontmatter":{"title":"Online Styleguide"}}}}}