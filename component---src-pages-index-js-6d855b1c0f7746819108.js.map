{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["loader","enqueue","React","createContext","BlogIndex","render","posts","this","props","data","allMarkdownRemark","edges","location","title","className","map","node","frontmatter","fields","slug","key","date","style","marginTop","rhythm","marginBottom","to","Component","pageQuery","m","module","exports","require","default","ProdPageRenderer","pageResources","createElement","InternalPageRenderer","json"],"mappings":"mJAcyBA,QAAOC,QAELC,IAAMC,cAAc,I,sFCRzCC,E,gLACJC,OAAA,WAAU,IAEFC,EADWC,KAAKC,MAAdC,KACWC,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUL,KAAKC,MAAMI,UAC3B,kBAAC,IAAD,CAAKC,MAAM,mBACX,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,2BAEhBR,EAAMS,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNH,EAAQG,EAAKC,YAAYJ,OAASG,EAAKE,OAAOC,KACpD,OACI,6BAASC,IAAKJ,EAAKE,OAAOC,KAAML,UAAU,gBACxC,+BAAQE,EAAKC,YAAYI,MACzB,wBACEC,MAAO,CACLC,UAAWC,YAAO,KAClBC,aAAcD,YAAO,OAGvB,kBAAC,IAAD,CAAMV,UAAU,YAAYY,GAAIV,EAAKE,OAAOC,MACzCN,SAOf,kBAAE,IAAF,Q,GA9EgBX,IAAMyB,WAsFjBC,GAFExB,YAEO,e,oBC9FtB,IAAsByB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,2ECsBhCK,UAjBU,SAAC,GAAiC,IAA/BtB,EAA8B,EAA9BA,SAAUuB,EAAoB,EAApBA,cACpC,OAAKA,EAGEjC,IAAMkC,cAAcC,IAApB,eACLzB,WACAuB,iBACGA,EAAcG,OALV","file":"component---src-pages-index-js-6d855b1c0f7746819108.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO title=\"Arjun Kalburgi\" />\n        <div className=\"section posts\">\n          <div className=\"bgicons b-lazy\">\n            <div className=\"bgicon bgicon1 b-lazy\"></div>\n            <div className=\"bgicon bgicon2 b-lazy\"></div>\n            <div className=\"bgicon bgicon3 b-lazy\"></div>\n            <div className=\"bgicon bgicon4 b-lazy\"></div>\n            <div className=\"bgicon bgicon5 b-lazy\"></div>\n            <div className=\"bgicon bgicon6 b-lazy\"></div>\n            <div className=\"bgicon bgicon7 b-lazy\"></div>\n            <div className=\"bgicon bgicon8 b-lazy\"></div>\n            <div className=\"bgicon bgicon1 b-lazy\"></div>\n            <div className=\"bgicon bgicon2 b-lazy\"></div>\n            <div className=\"bgicon bgicon3 b-lazy\"></div>\n            <div className=\"bgicon bgicon4 b-lazy\"></div>\n            <div className=\"bgicon bgicon5 b-lazy\"></div>\n            <div className=\"bgicon bgicon6 b-lazy\"></div>\n            <div className=\"bgicon bgicon7 b-lazy\"></div>\n            <div className=\"bgicon bgicon8 b-lazy\"></div>\n            <div className=\"bgicon bgicon1 b-lazy\"></div>\n            <div className=\"bgicon bgicon2 b-lazy\"></div>\n            <div className=\"bgicon bgicon3 b-lazy\"></div>\n            <div className=\"bgicon bgicon4 b-lazy\"></div>\n            <div className=\"bgicon bgicon5 b-lazy\"></div>\n            <div className=\"bgicon bgicon6 b-lazy\"></div>\n            <div className=\"bgicon bgicon7 b-lazy\"></div>\n            <div className=\"bgicon bgicon8 b-lazy\"></div>\n            <div className=\"bgicon bgicon1 b-lazy\"></div>\n            <div className=\"bgicon bgicon2 b-lazy\"></div>\n            <div className=\"bgicon bgicon3 b-lazy\"></div>\n            <div className=\"bgicon bgicon4 b-lazy\"></div>\n            <div className=\"bgicon bgicon5 b-lazy\"></div>\n            <div className=\"bgicon bgicon6 b-lazy\"></div>\n            <div className=\"bgicon bgicon7 b-lazy\"></div>\n            <div className=\"bgicon bgicon8 b-lazy\"></div>\n            <div className=\"bgicon bgicon1 b-lazy\"></div>\n            <div className=\"bgicon bgicon2 b-lazy\"></div>\n            <div className=\"bgicon bgicon3 b-lazy\"></div>\n            <div className=\"bgicon bgicon4 b-lazy\"></div>\n            <div className=\"bgicon bgicon5 b-lazy\"></div>\n            <div className=\"bgicon bgicon6 b-lazy\"></div>\n            <div className=\"bgicon bgicon7 b-lazy\"></div>\n            <div className=\"bgicon bgicon8 b-lazy\"></div>\n            <div className=\"bgicon bgicon1 b-lazy\"></div>\n            <div className=\"bgicon bgicon2 b-lazy\"></div>\n            <div className=\"bgicon bgicon3 b-lazy\"></div>\n            <div className=\"bgicon bgicon4 b-lazy\"></div>\n            <div className=\"bgicon bgicon5 b-lazy\"></div>\n            <div className=\"bgicon bgicon6 b-lazy\"></div>\n            <div className=\"bgicon bgicon7 b-lazy\"></div>\n            <div className=\"bgicon bgicon8 b-lazy\"></div>\n          </div>\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n                <article key={node.fields.slug} className=\"blog-article\">\n                  <small>{node.frontmatter.date}</small>\n                  <h3\n                    style={{\n                      marginTop: rhythm(1 / 4),\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link className=\"blog-link\" to={node.fields.slug}>\n                      {title}\n                    </Link>\n                  </h3>\n              </article>\n            )\n          })}\n        </div>\n        < Bio />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { draft: { eq: false } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}